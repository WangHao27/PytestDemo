{
  "uid" : "5da3e4fc900e16df",
  "name" : "test_mul[failed]",
  "fullName" : "testcases.test_calc.TestCalcutor#test_mul",
  "historyId" : "ab74f40bad377ee3a83ea79e1e0b8f50",
  "time" : {
    "start" : 1612096144686,
    "stop" : 1612096144687,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 242 == 333",
  "statusTrace" : "self = <pytest_practice.testcases.test_calc.TestCalcutor object at 0x03DC3B20>\nget_calc = <pytest_practice.common.calc.Calculator object at 0x03E64880>\nget_mul_datas = [11, 22, 333]\n\n    @allure.story(\"测试乘法\")\n    def test_mul(self, get_calc, get_mul_datas):\n        # 步骤说明\n        with allure.step(\"计算两个数的乘积\"):\n            result = get_calc.mul(get_mul_datas[0], get_mul_datas[1])\n        if isinstance(result, float):\n            result = round(result, 2)\n>       assert result == get_mul_datas[2]\nE       assert 242 == 333\n\ntestcases\\test_calc.py:47: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_calc",
    "time" : {
      "start" : 1612096144369,
      "stop" : 1612096144369,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "get_mul_datas",
    "time" : {
      "start" : 1612096144685,
      "stop" : 1612096144685,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 242 == 333",
    "statusTrace" : "self = <pytest_practice.testcases.test_calc.TestCalcutor object at 0x03DC3B20>\nget_calc = <pytest_practice.common.calc.Calculator object at 0x03E64880>\nget_mul_datas = [11, 22, 333]\n\n    @allure.story(\"测试乘法\")\n    def test_mul(self, get_calc, get_mul_datas):\n        # 步骤说明\n        with allure.step(\"计算两个数的乘积\"):\n            result = get_calc.mul(get_mul_datas[0], get_mul_datas[1])\n        if isinstance(result, float):\n            result = round(result, 2)\n>       assert result == get_mul_datas[2]\nE       assert 242 == 333\n\ntestcases\\test_calc.py:47: AssertionError",
    "steps" : [ {
      "name" : "计算两个数的乘积",
      "time" : {
        "start" : 1612096144687,
        "stop" : 1612096144687,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 1,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "get_calc::0",
    "time" : {
      "start" : 1612096144703,
      "stop" : 1612096144704,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "get_mul_datas::0",
    "time" : {
      "start" : 1612096144694,
      "stop" : 1612096144695,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "测试乘法"
  }, {
    "name" : "feature",
    "value" : "计算器测试"
  }, {
    "name" : "parentSuite",
    "value" : "testcases"
  }, {
    "name" : "suite",
    "value" : "test_calc"
  }, {
    "name" : "subSuite",
    "value" : "TestCalcutor"
  }, {
    "name" : "host",
    "value" : "XTZ-01705042203"
  }, {
    "name" : "thread",
    "value" : "12664-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.test_calc"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "get_mul_datas",
    "value" : "[11, 22, 333]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5da3e4fc900e16df.json",
  "parameterValues" : [ "[11, 22, 333]" ]
}